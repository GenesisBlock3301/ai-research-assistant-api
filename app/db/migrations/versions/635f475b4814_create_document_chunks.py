"""create document_chunks

Revision ID: 635f475b4814
Revises: 
Create Date: 2025-09-09 19:01:50.019974

"""
from typing import Sequence, Union
import pgvector
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '635f475b4814'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_chunks',
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('chunk_text', sa.Text(), nullable=False),
    sa.Column('start_pos', sa.Integer(), nullable=True),
    sa.Column('end_pos', sa.Integer(), nullable=True),
    sa.Column('tokens', sa.Integer(), nullable=True),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=768), nullable=True),
    sa.Column('meta_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_chunks_document_id'), 'document_chunks', ['document_id'], unique=False)
    op.drop_index(op.f('ix_profiles_id'), table_name='profiles')
    op.drop_table('profiles')
    op.drop_index(op.f('ix_documents_chunks_document_id'), table_name='documents_chunks')
    op.drop_index(op.f('ix_documents_chunks_id'), table_name='documents_chunks')
    op.drop_table('documents_chunks')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_column('documents', 'created_by')
    op.drop_column('documents', 'updated_by')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_column('users', 'created_by')
    op.drop_column('users', 'updated_by')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.add_column('documents', sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('documents', sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=True)
    op.create_table('documents_chunks',
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('chunk_text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('start_pos', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('end_pos', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tokens', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=768), autoincrement=False, nullable=True),
    sa.Column('metadata_info', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name=op.f('documents_chunks_document_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('documents_chunks_pkey'))
    )
    op.create_index(op.f('ix_documents_chunks_id'), 'documents_chunks', ['id'], unique=True)
    op.create_index(op.f('ix_documents_chunks_document_id'), 'documents_chunks', ['document_id'], unique=False)
    op.create_table('profiles',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('profiles_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('profiles_pkey'))
    )
    op.create_index(op.f('ix_profiles_id'), 'profiles', ['id'], unique=True)
    op.drop_index(op.f('ix_document_chunks_document_id'), table_name='document_chunks')
    op.drop_table('document_chunks')
    op.drop_table('user_profiles')
    # ### end Alembic commands ###
