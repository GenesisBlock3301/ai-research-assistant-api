services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: research_agents_api
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      agent_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./:/app  # Sync local code with container (useful for dev)

  agent_db:
    image: postgres:17
    container_name: research_agents_db
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: research_agents_redis
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

#  celery:
#    build: .
#    container_name: research_agents_celery
#    command: celery -A app.worker.celery_app worker --loglevel=info
#    env_file:
#      - .env
#    depends_on:
#      redis:
#        condition: service_healthy
#      agent_db:
#        condition: service_healthy
#    restart: always
#    volumes:
#      - ./:/app
# Sync local code with container (dev)

volumes:
  postgres_data:
